{"version":3,"file":"static/js/163.18c98e7f.chunk.js","mappings":"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","sources":["webpack://react16/./src/pages/home/Home.module.css?1311","pages/home/Home.js","services/Hooks/use-http.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Home_img__SDLv2\",\"imgDiv\":\"Home_imgDiv__Oj2N+\",\"cityDiv\":\"Home_cityDiv__KjGsb\",\"subheading\":\"Home_subheading__Sqk+7\",\"disabled\":\"Home_disabled__j8Xjp\",\"underSubHeader\":\"Home_underSubHeader__PoXs4\",\"registeredLabel\":\"Home_registeredLabel__Ylj35\",\"live\":\"Home_live__1ve-t\",\"heading\":\"Home_heading__0pXfm\",\"is_live\":\"Home_is_live__x-yFu\",\"pulse\":\"Home_pulse__jl9ka\",\"codeDiv\":\"Home_codeDiv__lhP0B\",\"locationDiv\":\"Home_locationDiv__tqzoQ\",\"headingDiv\":\"Home_headingDiv__U5Gyk\"};","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../../components/loading/Loading\";\r\nimport useHttp from \"../../services/Hooks/use-http\";\r\nimport style from \"./Home.module.css\";\r\nimport { ImCross } from \"react-icons/im\";\r\nimport { TiTick } from \"react-icons/ti\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchWarehousesStore } from \"../../services/warehouse/warehouseSlice\";\r\n\r\nfunction HomePage() {\r\n  const [warehouses, setWarehouses] = useState([]);\r\n  const [notFound, setNotFound] = useState(false);\r\n  const originalWarehouseList = useSelector(\r\n    (state) => state.warehouse.originalWarehouses\r\n  );\r\n  const filteredWarehouses = useSelector(\r\n    (state) => state.warehouse.filteredWarehouses\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  // dispatching feteched Warehouses to store.\r\n  function dispatchFetchedWarehouses(data) {\r\n    dispatch(\r\n      fetchWarehousesStore({\r\n        type: \"FETCHED_WAREHOUSES\",\r\n        data,\r\n      })\r\n    );\r\n  }\r\n\r\n  // http call to fetch all warehouses.\r\n  const {\r\n    isLoading: fetching,\r\n    error,\r\n    sendRequest: fetchWarehouse,\r\n  } = useHttp(\"/warehouse/all\", {}, (data) => {\r\n    dispatchFetchedWarehouses(data);\r\n  });\r\n\r\n  // fetch during initialisation\r\n  useEffect(() => {\r\n    fetchWarehouse();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // updates when store warehouse list updates.\r\n    setWarehouses(() => originalWarehouseList);\r\n  }, [originalWarehouseList]);\r\n\r\n  useEffect(() => {\r\n    // check if filtered warehouses exists\\\r\n    if (filteredWarehouses.length === 0) {\r\n      setNotFound(() => true);\r\n    }\r\n    setWarehouses(() => filteredWarehouses);\r\n  }, [filteredWarehouses]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col container mx-auto p-2\">\r\n      {/* no filtered products found */}\r\n      {!fetching && notFound && warehouses.length === 0 && (\r\n        <h1 className=\"heading-2 text-dark-grey text-center\">No Product found.</h1>\r\n      )}\r\n      {/* loading component */}\r\n      {(fetching || !warehouses) && <Loading />}\r\n      {/* main component */}\r\n      {!fetching && warehouses.length > 0 && (\r\n        <div>\r\n          {\" \"}\r\n          <h1 className={`heading-1 font-light letter-spacing-2`}>\r\n            List of Warehouse\r\n          </h1>\r\n          {warehouses?.map((warehouse) => (\r\n            <Link\r\n              to={`/warehouse/${warehouse._id}`}\r\n              key={warehouse._id}\r\n              className=\"flex flex-row gap-2 border mx-2 border-radius-lg\"\r\n            >\r\n              <div className=\"m-2 relative\">\r\n                <div className={`${style.imgDiv}`}>\r\n                  <img\r\n                    className={`${style.img}  border-radius-lg`}\r\n                    alt=\"warehouse img\"\r\n                    src={\r\n                      warehouse?.img\r\n                        ? warehouse.img\r\n                        : \"https://stockarea.io/assets/user/images/home/storage.jpg\"\r\n                    }\r\n                  ></img>\r\n                </div>\r\n                <div\r\n                  className={`${style.live} ${\r\n                    warehouse.is_live ? `${style.is_live}` : \"\"\r\n                  } rounded-full absolute`}\r\n                ></div>\r\n                <div\r\n                  className={`${\r\n                    warehouse.is_live ? \"\" : `${style.disabled}`\r\n                  } border-radius-lg`}\r\n                ></div>\r\n                <div className={`${style.cityDiv}`}>\r\n                  <p className=\"text-center\">üìç{warehouse.city}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex-1 p-2\">\r\n                <div className={`${style.headingDiv}`}>\r\n                  <h2 className=\"heading-3 font-medium\">{warehouse.name}</h2>\r\n                  <div className=\"flex\">\r\n                    <span className={`${style.registeredLabel}`}>\r\n                      {warehouse.is_registered ? (\r\n                        <TiTick className=\"color-green self-center icon\" />\r\n                      ) : (\r\n                        <ImCross className=\"color-red self-center icon\" />\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div className={`text-center flex flex-col`}>\r\n                  <div className={`flex flex-row gap-2 ${style.codeDiv}`}>\r\n                    <div>\r\n                      <p>\r\n                        <span>{warehouse.type}</span>\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <p>\r\n                        <span>{warehouse.cluster}</span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className={`${style.underSubHeader} flex flex-col gap-2`}\r\n                  >\r\n                    <p className={`text-left text-grey`}>\r\n                      Code:{\" \"}\r\n                      <span className=\"text-primary font-bold numberFont\">\r\n                        {\" \"}\r\n                        {warehouse.code}\r\n                      </span>\r\n                    </p>\r\n                    <p className={`text-left text-grey`}>\r\n                      Space Available:{\" \"}\r\n                      <span className=\"text-primary \">\r\n                        {warehouse.space_available}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import { useState } from \"react\";\r\n\r\nconst useHttp = (url = \"\", options = {}, callback) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, seterror] = useState(null);\r\n\r\n  const api = process.env.REACT_APP_API_URL\r\n    ? process.env.REACT_APP_API_URL\r\n    : \"/api\";\r\n\r\n  const sendRequest = async () => {\r\n    setIsLoading(true);\r\n    seterror(null);\r\n    try {\r\n      const response = await fetch(api + url, {\r\n        method: options.method ? options.method : \"GET\",\r\n        mode: \"cors\",\r\n        cache: \"no-cache\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          ...options.headers,\r\n        },\r\n        body: options.body ? JSON.stringify(options.body) : null,\r\n      }).then((data) => data.json());\r\n      if (!response.success) {\r\n        // TODO:show notify\r\n        seterror(response.title);\r\n      }\r\n      callback(response.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n      seterror(err.msg || \"something went wrong\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n"],"names":["useState","warehouses","setWarehouses","notFound","setNotFound","originalWarehouseList","useSelector","state","warehouse","originalWarehouses","filteredWarehouses","dispatch","useDispatch","useHttp","data","fetchWarehousesStore","type","dispatchFetchedWarehouses","fetching","isLoading","fetchWarehouse","error","sendRequest","useEffect","length","className","Loading","map","to","_id","style","alt","src","img","is_live","city","name","is_registered","cluster","code","space_available","url","options","callback","setIsLoading","seterror","api","process","fetch","method","mode","cache","headers","body","JSON","stringify","then","json","response","success","title","console","log","msg"],"sourceRoot":""}