{"version":3,"file":"static/js/99.c0db7297.chunk.js","mappings":"qOACA,EAAyB,kCAAzB,EAAuI,gCAAvI,EAA8O,mCAA9O,EAA8R,sCAA9R,EAA6U,kCAA7U,EAA8X,wCAA9X,EAAsb,yCAAtb,EAAkf,4CAAlf,EAAwiB,mCAAxiB,EAAqlB,mCAArlB,EAA4qB,oCAA5qB,EAA4tB,qC,SCsS5tB,MA9RA,WACE,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAgDF,EAAAA,EAAAA,UAAS,IAAzD,eAAOG,EAAP,KAAyBC,EAAzB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KACA,GADA,MAC4BL,EAAAA,EAAAA,WAAS,IAArC,eAAOM,EAAP,KAAeC,EAAf,KAEA,GAIIC,EAAAA,EAAAA,GAAQ,qBAAD,OACYZ,GACrB,CACEa,OAAQ,OACRC,KAAMP,IAER,WACEQ,MAAM,qBACNb,EAAS,QATEc,GAHf,EACEP,UADF,EAEEQ,MAFF,EAGEC,aAaF,GAIIN,EAAAA,EAAAA,GAAQ,qBAAD,OAAsBZ,GAAM,IAAI,SAACmB,GAC1Cb,GAAa,kBAAMa,QAFNC,GAHf,EACEX,UADF,EAEEQ,MAFF,EAGEC,aAKIG,EAAoB,SAACC,GACzBd,GAAoB,WAClB,OAAO,kBACFD,GADL,cAEGe,EAAM,KAAWA,EAAOC,YA6B/B,OARAC,EAAAA,EAAAA,YAAU,WACRJ,MACC,CAACpB,KAEJwB,EAAAA,EAAAA,YAAU,WACRhB,GAAoB,kBAAMH,OACzB,CAACA,KAGF,iBAAKoB,UAAU,sCAAf,UACGhB,IAAa,SAACiB,EAAA,EAAD,KACZjB,IACA,iBAAKgB,UAAU,GAAf,WACE,eAAIA,UAAS,oDAAb,gCAGA,iBAAKA,UAAS,UAAKE,EAAL,QAAd,WACE,iBAAKF,UAAS,UAAKE,EAAL,aAAd,WACE,gBACEC,IAAI,gBACJC,IACW,OAATxB,QAAS,IAATA,GAAAA,EAAWyB,IACPzB,EAAUyB,IACV,8DAGR,gBACEL,UAAS,UACPpB,EAAU0B,cAAV,UACOJ,GADP,UAEOA,IAJX,SAOGtB,EAAU0B,cAAV,+CAIH,gBACEN,UAAS,UAAKE,EAAL,YACPtB,EAAU2B,QAAV,UAAuBL,GAAvB,UAA4CA,UAKhDjB,IACA,iBAAKe,UAAS,UAAKE,EAAL,+BAAd,WACE,gBAAIF,UAAU,6BAAd,UACGpB,EAAU4B,KAAM,IAChB5B,EAAU0B,eACT,SAAC,MAAD,CAAQN,UAAU,6BAElB,SAAC,MAAD,CAASA,UAAU,8BAGvB,gBAAIA,UAAU,uCAAd,yBACKpB,EAAU6B,KADf,uCAGA,gBAAIT,UAAU,qCAAd,0CACsB,KACpB,kBAAMA,UAAU,iCAAhB,UACG,IACApB,EAAU8B,uBAGf,eAAGV,UAAU,qCAAb,iDACc,KACZ,kBAAMA,UAAU,wBAAhB,UACG,IACApB,EAAU+B,YAGf,eAAGX,UAAU,qCAAb,kCACc,KACZ,kBAAMA,UAAU,wBAAhB,UACG,IACApB,EAAUgC,eAGf,eAAGZ,UAAU,qCAAb,+BACW,KACT,kBAAMA,UAAU,iCAAhB,UACG,IACApB,EAAUiC,YAGf,eAAGb,UAAU,qCAAb,mDACgB,KACd,kBAAMA,UAAU,iCAAhB,UACG,IACApB,EAAU2B,QAAU,OAAS,kBAGlC,eAAGP,UAAU,qCAAb,qCACiB,KACf,kBAAMA,UAAU,iCAAhB,UACG,IACApB,EAAU0B,cAAgB,MAAQ,YAGvC,gBAAKN,UAAS,UAAKE,GAAnB,UACE,mBACEY,QAAS,kBAAM5B,GAAU,IACzBc,UAAS,UAAKE,GAFhB,uBAULjB,IACC,iBAAKe,UAAS,UAAKE,EAAL,+BAAd,WACE,gBACEF,UAAS,sDADX,qBAGWpB,EAAU4B,SAErB,kBAAMR,UAAS,UAAKE,GAApB,WACE,4BACE,kBAAOa,QAAQ,OAAf,mBACA,kBACEC,QAAS,SAACC,GAAD,OAAOrB,EAAkBqB,EAAEpB,SACpCW,KAAK,OACLjC,GAAG,OACH2C,YAAapC,EAAiB0B,WAGlC,4BACE,kBAAOO,QAAQ,OAAf,mBACA,kBACEP,KAAK,OACLQ,QAAS,SAACC,GAAD,OAAOrB,EAAkBqB,EAAEpB,SACpCqB,YAAapC,EAAiB2B,KAC9BlC,GAAG,aAGP,4BACE,kBAAOwC,QAAQ,MAAf,oBACA,kBACEP,KAAK,MACLQ,QAAS,SAACC,GAAD,OAAOrB,EAAkBqB,EAAEpB,SACpCqB,YAAapC,EAAiBuB,IAC9B9B,GAAG,YAGP,4BACE,kBAAOwC,QAAQ,kBAAf,8BACA,kBACEP,KAAK,kBACLjC,GAAG,kBACHyC,QAAS,SAACC,GAAD,OAAOrB,EAAkBqB,EAAEpB,SACpCqB,YAAapC,EAAiB4B,sBAGlC,4BACE,kBAAOK,QAAQ,OAAf,mBACA,kBACEP,KAAK,OACLQ,QAAS,SAACC,GAAD,OAAOrB,EAAkBqB,EAAEpB,SACpCtB,GAAG,OACH2C,YAAapC,EAAiB6B,WAGlC,4BACE,kBAAOI,QAAQ,UAAf,sBACA,kBACEP,KAAK,UACLQ,QAAS,SAACC,GAAD,OAAOrB,EAAkBqB,EAAEpB,SACpCtB,GAAG,UACH2C,YAAapC,EAAiB8B,cAGlC,4BACE,kBAAOG,QAAQ,OAAf,mBACA,kBACEP,KAAK,OACLjC,GAAG,OACHyC,QAAS,SAACC,GAAD,OAAOrB,EAAkBqB,EAAEpB,SACpCqB,YAAapC,EAAiB+B,WAGlC,4BACE,kBAAOE,QAAQ,UAAf,qBACA,oBACEP,KAAK,UACLW,SAAU,SAACF,GAAD,OAAOrB,EAAkBqB,EAAEpB,SACrCC,MAAOhB,EAAiByB,QAH1B,WAKE,mBAAQT,MAAM,OAAd,mBACA,mBAAQA,MAAM,QAAd,6BAGJ,4BACE,kBAAOiB,QAAQ,gBAAf,yBACA,oBACEP,KAAK,gBACLW,SAAU,SAACF,GAAD,OAAOrB,EAAkBqB,EAAEpB,SACrCC,MAAOhB,EAAiBwB,cAH1B,WAKE,mBAAQR,MAAM,OAAd,yBACA,mBAAQA,MAAM,QAAd,sCAIN,iBAAKE,UAAS,UAAKE,EAAL,YAAd,WACE,mBACES,KAAK,SACLG,QAAS,WA7NtBhC,EAAiB0B,MACjB1B,EAAiB2B,MACjB3B,EAAiB4B,iBACjB5B,EAAiB6B,MACjB7B,EAAiB8B,SACjB9B,EAAiB+B,MACjB/B,EAAiB2B,KAIlBlB,IAFAD,MAAM,oBAsNQU,UAAS,UAAKE,GAHhB,qBAOA,mBACES,KAAK,SACLG,QAAS,kBAAM5B,GAAU,IACzBc,UAAS,UAAKE,EAAL,SAHX,qC,8EC1OlB,IA1CgB,WAAuC,IAAtCkB,EAAqC,uDAA/B,GAAIC,EAA2B,uDAAjB,GAAIC,EAAa,uCACpD,GAAkC3C,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBuC,EAAlB,KACA,GAA0B5C,EAAAA,EAAAA,UAAS,MAAnC,eAAOa,EAAP,KAAcgC,EAAd,KAEMC,EAAMC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,kBACpBD,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,kBACZ,OAEElC,EAAW,mCAAG,2FAClB8B,GAAa,GACbC,EAAS,MAFS,kBAIOI,MAAMH,EAAML,EAAK,CACtChC,OAAQiC,EAAQjC,OAASiC,EAAQjC,OAAS,MAC1CyC,KAAM,OACNC,MAAO,WACPC,SAAQ,QACN,eAAgB,oBACbV,EAAQU,SAEb1C,KAAMgC,EAAQhC,KAAO2C,KAAKC,UAAUZ,EAAQhC,MAAQ,OACnD6C,MAAK,SAACxC,GAAD,OAAUA,EAAKyC,UAbP,QAIVC,EAJU,QAcFC,SAEZb,EAASY,EAASE,OAEpBhB,EAASc,EAAS1C,MAlBF,kDAoBhB6C,QAAQC,IAAR,MACAhB,EAAS,KAAIiB,KAAO,wBArBJ,yBAuBhBlB,GAAa,GAvBG,6EAAH,qDA2BjB,MAAO,CACLvC,UAAAA,EACAQ,MAAAA,EACAC,YAAAA","sources":["webpack://react16/./src/pages/warehouse-details/Warehouse-details.module.css?7560","pages/warehouse-details/Warehouse-details.js","services/Hooks/use-http.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"imgDiv\":\"Warehouse-details_imgDiv__EyGZB\",\"toggleEditingButton\":\"Warehouse-details_toggleEditingButton__sRUlB\",\"form\":\"Warehouse-details_form__9HycI\",\"registered_icon\":\"Warehouse-details_registered_icon__G8XHK\",\"mainDiv\":\"Warehouse-details_mainDiv__l3cz1\",\"detailsDiv\":\"Warehouse-details_detailsDiv__BdvqH\",\"button\":\"Warehouse-details_button__uC15a\",\"buttonCancel\":\"Warehouse-details_buttonCancel__n-Slo\",\"registeredDiv\":\"Warehouse-details_registeredDiv__uI3AG\",\"notRegisteredDiv\":\"Warehouse-details_notRegisteredDiv__0yt5Y\",\"liveDiv\":\"Warehouse-details_liveDiv__0cUMH\",\"is_live\":\"Warehouse-details_is_live__MZzpt\",\"pulse\":\"Warehouse-details_pulse__1YO1o\",\"not_live\":\"Warehouse-details_not_live__RxWYM\",\"actionDiv\":\"Warehouse-details_actionDiv__dvu9D\"};","import React, { useEffect, useState } from \"react\";\nimport { ImCross } from \"react-icons/im\";\nimport { TiTick } from \"react-icons/ti\";\n\nimport { useNavigate, useParams } from \"react-router\";\nimport Loading from \"../../components/loading/Loading\";\nimport useHttp from \"../../services/Hooks/use-http\";\nimport style from \"./Warehouse-details.module.css\";\n\nfunction WarehouseDetailsPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [warehouse, setWarehouse] = useState({});\n  const [updatedWarehouse, setUpdatedWarehouse] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n\n  const {\n    isLoading: updatingWarehouse,\n    error: errorUpdatingWarehouse,\n    sendRequest: updateWarehouse,\n  } = useHttp(\n    `/warehouse/update/${id}`,\n    {\n      method: \"POST\",\n      body: updatedWarehouse,\n    },\n    () => {\n      alert(\"Warehouse updated\");\n      navigate(\"/\");\n    }\n  );\n\n  const {\n    isLoading: fetchingWarehouse,\n    error: errorWarehouse,\n    sendRequest: fetchingSingleWarehouse,\n  } = useHttp(`/warehouse/search/${id}`, {}, (data) => {\n    setWarehouse(() => data);\n  });\n\n  const updateFormHandler = (target) => {\n    setUpdatedWarehouse(() => {\n      return {\n        ...updatedWarehouse,\n        [target[\"name\"]]: target.value,\n      };\n    });\n  };\n\n  const submitFormHandler = () => {\n    if (\n      !updatedWarehouse.name ||\n      !updatedWarehouse.city ||\n      !updatedWarehouse.space_available ||\n      !updatedWarehouse.type ||\n      !updatedWarehouse.cluster ||\n      !updatedWarehouse.code ||\n      !updatedWarehouse.city\n    ) {\n      alert(\"invalid request\");\n    } else {\n      updateWarehouse();\n    }\n  };\n\n  useEffect(() => {\n    fetchingSingleWarehouse();\n  }, [id]);\n\n  useEffect(() => {\n    setUpdatedWarehouse(() => warehouse);\n  }, [warehouse]);\n\n  return (\n    <div className=\"flex flex-col container mx-auto p-2\">\n      {isLoading && <Loading />}\n      {!isLoading && (\n        <div className=\"\">\n          <h1 className={`heading-1 font-light letter-spacing-2 smooth-font`}>\n            Warehouse Details\n          </h1>\n          <div className={`${style.mainDiv} p-2`}>\n            <div className={`${style.imgDiv} relative`}>\n              <img\n                alt=\"warehouse img\"\n                src={\n                  warehouse?.img\n                    ? warehouse.img\n                    : \"https://stockarea.io/assets/user/images/home/storage.jpg\"\n                }\n              />\n              <div\n                className={`${\n                  warehouse.is_registered\n                    ? `${style.registeredDiv}`\n                    : `${style.notRegisteredDiv}`\n                }`}\n              >\n                {warehouse.is_registered\n                  ? `REGISTERED ✅`\n                  : `NOT REGISTERED ❌`}\n              </div>\n              <div\n                className={`${style.liveDiv} ${\n                  warehouse.is_live ? `${style.is_live}` : `${style.not_live}`\n                }`}\n              ></div>\n            </div>\n\n            {!isEdit && (\n              <div className={`${style.detailsDiv} flex-1 flex flex-col gap-2`}>\n                <h1 className=\"smooth-font text-dark-grey\">\n                  {warehouse.name}{\" \"}\n                  {warehouse.is_registered ? (\n                    <TiTick className=\"color-green self-center\" />\n                  ) : (\n                    <ImCross className=\"color-red self-center\" />\n                  )}\n                </h1>\n                <h2 className=\"heading-3 text-dark-grey smooth-font\">\n                  📍{warehouse.city}, India 🇮🇳\n                </h2>\n                <h3 className=\"heading-3 font-medium text-primary\">\n                  📦 Available Space:{\" \"}\n                  <span className=\"font-bold text-grey numberFont\">\n                    {\" \"}\n                    {warehouse.space_available}\n                  </span>\n                </h3>\n                <p className=\"heading-3 font-medium text-primary\">\n                  🤷‍♂️ Type:{\" \"}\n                  <span className=\"font-medium text-grey\">\n                    {\" \"}\n                    {warehouse.type}\n                  </span>\n                </p>\n                <p className=\"heading-3 font-medium text-primary\">\n                  💭 Cluster:{\" \"}\n                  <span className=\"font-medium text-grey\">\n                    {\" \"}\n                    {warehouse.cluster}\n                  </span>\n                </p>\n                <p className=\"heading-3 font-medium text-primary\">\n                  🔒 Code:{\" \"}\n                  <span className=\"font-bold text-grey numberFont\">\n                    {\" \"}\n                    {warehouse.code}\n                  </span>\n                </p>\n                <p className=\"heading-3 font-medium text-primary\">\n                  🙋‍♂️ Status:{\" \"}\n                  <span className=\"font-bold text-grey numberFont\">\n                    {\" \"}\n                    {warehouse.is_live ? \"Live\" : \"Not Live\"}\n                  </span>\n                </p>\n                <p className=\"heading-3 font-medium text-primary\">\n                  🔍 Registered:{\" \"}\n                  <span className=\"font-bold text-grey numberFont\">\n                    {\" \"}\n                    {warehouse.is_registered ? \"Yes\" : \"No\"}\n                  </span>\n                </p>\n                <div className={`${style.actionDiv}`}>\n                  <button\n                    onClick={() => setIsEdit(true)}\n                    className={`${style.button}`}\n                  >\n                    Edit\n                  </button>\n                </div>\n              </div>\n            )}\n\n            {isEdit && (\n              <div className={`${style.detailsDiv} flex-1 flex flex-col gap-2`}>\n                <h1\n                  className={`heading-2 font-medium text-primary letter-spacing-1`}\n                >\n                  Editing {warehouse.name}\n                </h1>\n                <form className={`${style.form}`}>\n                  <div>\n                    <label htmlFor=\"name\">Name</label>\n                    <input\n                      onKeyUp={(e) => updateFormHandler(e.target)}\n                      name=\"name\"\n                      id=\"name\"\n                      placeholder={updatedWarehouse.name}\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"city\">City</label>\n                    <input\n                      name=\"city\"\n                      onKeyUp={(e) => updateFormHandler(e.target)}\n                      placeholder={updatedWarehouse.city}\n                      id=\"city\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"img\">Image</label>\n                    <input\n                      name=\"img\"\n                      onKeyUp={(e) => updateFormHandler(e.target)}\n                      placeholder={updatedWarehouse.img}\n                      id=\"img\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"available_space\">Available Space</label>\n                    <input\n                      name=\"available_space\"\n                      id=\"available_space\"\n                      onKeyUp={(e) => updateFormHandler(e.target)}\n                      placeholder={updatedWarehouse.space_available}\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"type\">Type</label>\n                    <input\n                      name=\"type\"\n                      onKeyUp={(e) => updateFormHandler(e.target)}\n                      id=\"type\"\n                      placeholder={updatedWarehouse.type}\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"cluster\">Cluster</label>\n                    <input\n                      name=\"cluster\"\n                      onKeyUp={(e) => updateFormHandler(e.target)}\n                      id=\"cluster\"\n                      placeholder={updatedWarehouse.cluster}\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"code\">Code</label>\n                    <input\n                      name=\"code\"\n                      id=\"code\"\n                      onKeyUp={(e) => updateFormHandler(e.target)}\n                      placeholder={updatedWarehouse.code}\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"is_live\">Status</label>\n                    <select\n                      name=\"is_live\"\n                      onChange={(e) => updateFormHandler(e.target)}\n                      value={updatedWarehouse.is_live}\n                    >\n                      <option value=\"true\">Live</option>\n                      <option value=\"false\">Not Live</option>\n                    </select>\n                  </div>\n                  <div>\n                    <label htmlFor=\"is_registered\">Registered</label>\n                    <select\n                      name=\"is_registered\"\n                      onChange={(e) => updateFormHandler(e.target)}\n                      value={updatedWarehouse.is_registered}\n                    >\n                      <option value=\"true\">Registered</option>\n                      <option value=\"false\">Not Registered</option>\n                    </select>\n                  </div>\n                </form>\n                <div className={`${style.actionDiv} mx-auto`}>\n                  <button\n                    type=\"button\"\n                    onClick={() => submitFormHandler()}\n                    className={`${style.button}`}\n                  >\n                    Submit\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => setIsEdit(false)}\n                    className={`${style.buttonCancel} my-2`}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WarehouseDetailsPage;\n","import { useState } from \"react\";\n\nconst useHttp = (url = \"\", options = {}, callback) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, seterror] = useState(null);\n\n  const api = process.env.REACT_APP_API_URL\n    ? process.env.REACT_APP_API_URL\n    : \"/api\";\n\n  const sendRequest = async () => {\n    setIsLoading(true);\n    seterror(null);\n    try {\n      const response = await fetch(api + url, {\n        method: options.method ? options.method : \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...options.headers,\n        },\n        body: options.body ? JSON.stringify(options.body) : null,\n      }).then((data) => data.json());\n      if (!response.success) {\n        // TODO:show notify\n        seterror(response.title);\n      }\n      callback(response.data);\n    } catch (err) {\n      console.log(err);\n      seterror(err.msg || \"something went wrong\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    isLoading,\n    error,\n    sendRequest,\n  };\n};\n\nexport default useHttp;\n"],"names":["id","useParams","navigate","useNavigate","useState","warehouse","setWarehouse","updatedWarehouse","setUpdatedWarehouse","isLoading","isEdit","setIsEdit","useHttp","method","body","alert","updateWarehouse","error","sendRequest","data","fetchingSingleWarehouse","updateFormHandler","target","value","useEffect","className","Loading","style","alt","src","img","is_registered","is_live","name","city","space_available","type","cluster","code","onClick","htmlFor","onKeyUp","e","placeholder","onChange","url","options","callback","setIsLoading","seterror","api","process","REACT_APP_API_URL","fetch","mode","cache","headers","JSON","stringify","then","json","response","success","title","console","log","msg"],"sourceRoot":""}